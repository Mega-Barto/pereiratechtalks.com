{"version":3,"file":"navigation_CcFMbZHq.mjs","sources":["../../src/utils/images-optimization.ts","../../src/components/common/Image.astro","../../node_modules/astro-icon/components/cache.ts","../../node_modules/astro-icon/components/Icon.astro","../../src/components/ui/Button.astro","../../src/components/Logo.astro","../../src/components/common/ToggleTheme.astro","../../src/components/common/ToggleMenu.astro","../../src/components/widgets/Header.astro","../../src/components/widgets/Footer.astro","../../src/navigation.js"],"sourcesContent":["import { getImage } from 'astro:assets';\nimport { transformUrl, parseUrl } from 'unpic';\n\nimport type { ImageMetadata } from 'astro';\nimport type { HTMLAttributes } from 'astro/types';\n\ntype Layout = 'fixed' | 'constrained' | 'fullWidth' | 'cover' | 'responsive' | 'contained';\n\n// eslint-disable-next-line @typescript-eslint/no-empty-interface, @typescript-eslint/no-empty-object-type\nexport interface AttributesProps extends HTMLAttributes<'img'> {}\n\nexport interface ImageProps extends Omit<HTMLAttributes<'img'>, 'src'> {\n  src?: string | ImageMetadata | null;\n  width?: string | number | null;\n  height?: string | number | null;\n  alt?: string | null;\n  loading?: 'eager' | 'lazy' | null;\n  decoding?: 'sync' | 'async' | 'auto' | null;\n  style?: string;\n  srcset?: string | null;\n  sizes?: string | null;\n  fetchpriority?: 'high' | 'low' | 'auto' | null;\n\n  layout?: Layout;\n  widths?: number[] | null;\n  aspectRatio?: string | number | null;\n}\n\nexport type ImagesOptimizer = (\n  image: ImageMetadata | string,\n  breakpoints: number[],\n  width?: number,\n  height?: number\n) => Promise<Array<{ src: string; width: number }>>;\n\n/* ******* */\nconst config = {\n  // FIXME: Use this when image.width is minor than deviceSizes\n  imageSizes: [16, 32, 48, 64, 96, 128, 256, 384],\n\n  deviceSizes: [\n    640, // older and lower-end phones\n    750, // iPhone 6-8\n    828, // iPhone XR/11\n    960, // older horizontal phones\n    1080, // iPhone 6-8 Plus\n    1280, // 720p\n    1668, // Various iPads\n    1920, // 1080p\n    2048, // QXGA\n    2560, // WQXGA\n    3200, // QHD+\n    3840, // 4K\n    4480, // 4.5K\n    5120, // 5K\n    6016, // 6K\n  ],\n\n  formats: ['image/webp'],\n};\n\nconst computeHeight = (width: number, aspectRatio: number) => {\n  return Math.floor(width / aspectRatio);\n};\n\nconst parseAspectRatio = (aspectRatio: number | string | null | undefined): number | undefined => {\n  if (typeof aspectRatio === 'number') return aspectRatio;\n\n  if (typeof aspectRatio === 'string') {\n    const match = aspectRatio.match(/(\\d+)\\s*[/:]\\s*(\\d+)/);\n\n    if (match) {\n      const [, num, den] = match.map(Number);\n      if (den && !isNaN(num)) return num / den;\n    } else {\n      const numericValue = parseFloat(aspectRatio);\n      if (!isNaN(numericValue)) return numericValue;\n    }\n  }\n\n  return undefined;\n};\n\n/**\n * Gets the `sizes` attribute for an image, based on the layout and width\n */\nexport const getSizes = (width?: number, layout?: Layout): string | undefined => {\n  if (!width || !layout) {\n    return undefined;\n  }\n  switch (layout) {\n    // If screen is wider than the max size, image width is the max size,\n    // otherwise it's the width of the screen\n    case `constrained`:\n      return `(min-width: ${width}px) ${width}px, 100vw`;\n\n    // Image is always the same width, whatever the size of the screen\n    case `fixed`:\n      return `${width}px`;\n\n    // Image is always the width of the screen\n    case `fullWidth`:\n      return `100vw`;\n\n    default:\n      return undefined;\n  }\n};\n\nconst pixelate = (value?: number) => (value || value === 0 ? `${value}px` : undefined);\n\nconst getStyle = ({\n  width,\n  height,\n  aspectRatio,\n  layout,\n  objectFit = 'cover',\n  objectPosition = 'center',\n  background,\n}: {\n  width?: number;\n  height?: number;\n  aspectRatio?: number;\n  objectFit?: string;\n  objectPosition?: string;\n  layout?: string;\n  background?: string;\n}) => {\n  const styleEntries: Array<[prop: string, value: string | undefined]> = [\n    ['object-fit', objectFit],\n    ['object-position', objectPosition],\n  ];\n\n  // If background is a URL, set it to cover the image and not repeat\n  if (background?.startsWith('https:') || background?.startsWith('http:') || background?.startsWith('data:')) {\n    styleEntries.push(['background-image', `url(${background})`]);\n    styleEntries.push(['background-size', 'cover']);\n    styleEntries.push(['background-repeat', 'no-repeat']);\n  } else {\n    styleEntries.push(['background', background]);\n  }\n  if (layout === 'fixed') {\n    styleEntries.push(['width', pixelate(width)]);\n    styleEntries.push(['height', pixelate(height)]);\n    styleEntries.push(['object-position', 'top left']);\n  }\n  if (layout === 'constrained') {\n    styleEntries.push(['max-width', pixelate(width)]);\n    styleEntries.push(['max-height', pixelate(height)]);\n    styleEntries.push(['aspect-ratio', aspectRatio ? `${aspectRatio}` : undefined]);\n    styleEntries.push(['width', '100%']);\n  }\n  if (layout === 'fullWidth') {\n    styleEntries.push(['width', '100%']);\n    styleEntries.push(['aspect-ratio', aspectRatio ? `${aspectRatio}` : undefined]);\n    styleEntries.push(['height', pixelate(height)]);\n  }\n  if (layout === 'responsive') {\n    styleEntries.push(['width', '100%']);\n    styleEntries.push(['height', 'auto']);\n    styleEntries.push(['aspect-ratio', aspectRatio ? `${aspectRatio}` : undefined]);\n  }\n  if (layout === 'contained') {\n    styleEntries.push(['max-width', '100%']);\n    styleEntries.push(['max-height', '100%']);\n    styleEntries.push(['object-fit', 'contain']);\n    styleEntries.push(['aspect-ratio', aspectRatio ? `${aspectRatio}` : undefined]);\n  }\n  if (layout === 'cover') {\n    styleEntries.push(['max-width', '100%']);\n    styleEntries.push(['max-height', '100%']);\n  }\n\n  const styles = Object.fromEntries(styleEntries.filter(([, value]) => value));\n\n  return Object.entries(styles)\n    .map(([key, value]) => `${key}: ${value};`)\n    .join(' ');\n};\n\nconst getBreakpoints = ({\n  width,\n  breakpoints,\n  layout,\n}: {\n  width?: number;\n  breakpoints?: number[];\n  layout: Layout;\n}): number[] => {\n  if (layout === 'fullWidth' || layout === 'cover' || layout === 'responsive' || layout === 'contained') {\n    return breakpoints || config.deviceSizes;\n  }\n  if (!width) {\n    return [];\n  }\n  const doubleWidth = width * 2;\n  if (layout === 'fixed') {\n    return [width, doubleWidth];\n  }\n  if (layout === 'constrained') {\n    return [\n      // Always include the image at 1x and 2x the specified width\n      width,\n      doubleWidth,\n      // Filter out any resolutions that are larger than the double-res image\n      ...(breakpoints || config.deviceSizes).filter((w) => w < doubleWidth),\n    ];\n  }\n\n  return [];\n};\n\n/* ** */\nexport const astroAsseetsOptimizer: ImagesOptimizer = async (image, breakpoints) => {\n  if (!image || typeof image === 'string') {\n    return [];\n  }\n\n  return Promise.all(\n    breakpoints.map(async (w: number) => {\n      const url = (await getImage({ src: image, width: w })).src;\n      return {\n        src: url,\n        width: w,\n      };\n    })\n  );\n};\n\n/* ** */\nexport const unpicOptimizer: ImagesOptimizer = async (image, breakpoints, width, height) => {\n  if (!image || typeof image !== 'string') {\n    return [];\n  }\n\n  const urlParsed = parseUrl(image);\n  if (!urlParsed) {\n    return [];\n  }\n\n  return Promise.all(\n    breakpoints.map(async (w: number) => {\n      const url =\n        transformUrl({\n          url: image,\n          width: w,\n          height: width && height ? computeHeight(w, width / height) : height,\n          cdn: urlParsed.cdn,\n        }) || image;\n      return {\n        src: String(url),\n        width: w,\n      };\n    })\n  );\n};\n\n/* ** */\nexport async function getImagesOptimized(\n  image: ImageMetadata | string,\n  { src: _, width, height, sizes, aspectRatio, widths, layout = 'constrained', style = '', ...rest }: ImageProps,\n  transform: ImagesOptimizer = () => Promise.resolve([])\n): Promise<{ src: string; attributes: AttributesProps }> {\n  if (typeof image !== 'string') {\n    width ||= Number(image.width) || undefined;\n    height ||= typeof width === 'number' ? computeHeight(width, image.width / image.height) : undefined;\n  }\n\n  width = (width && Number(width)) || undefined;\n  height = (height && Number(height)) || undefined;\n\n  widths ||= config.deviceSizes;\n  sizes ||= getSizes(Number(width) || undefined, layout);\n  aspectRatio = parseAspectRatio(aspectRatio);\n\n  // Calculate dimensions from aspect ratio\n  if (aspectRatio) {\n    if (width) {\n      if (height) {\n        /* empty */\n      } else {\n        height = width / aspectRatio;\n      }\n    } else if (height) {\n      width = Number(height * aspectRatio);\n    } else if (layout !== 'fullWidth') {\n      // Fullwidth images have 100% width, so aspectRatio is applicable\n      console.error('When aspectRatio is set, either width or height must also be set');\n      console.error('Image', image);\n    }\n  } else if (width && height) {\n    aspectRatio = width / height;\n  } else if (layout !== 'fullWidth') {\n    // Fullwidth images don't need dimensions\n    console.error('Either aspectRatio or both width and height must be set');\n    console.error('Image', image);\n  }\n\n  let breakpoints = getBreakpoints({ width: width, breakpoints: widths, layout: layout });\n  breakpoints = [...new Set(breakpoints)].sort((a, b) => a - b);\n\n  const srcset = (await transform(image, breakpoints, Number(width) || undefined, Number(height) || undefined))\n    .map(({ src, width }) => `${src} ${width}w`)\n    .join(', ');\n\n  return {\n    src: typeof image === 'string' ? image : image.src,\n    attributes: {\n      width: width,\n      height: height,\n      srcset: srcset || undefined,\n      sizes: sizes,\n      style: `${getStyle({\n        width: width,\n        height: height,\n        aspectRatio: aspectRatio,\n        layout: layout,\n      })}${style ?? ''}`,\n      ...rest,\n    },\n  };\n}\n","---\nimport { findImage } from '~/utils/images';\nimport {\n  getImagesOptimized,\n  astroAsseetsOptimizer,\n  unpicOptimizer,\n  type ImageProps,\n  type AttributesProps,\n} from '~/utils/images-optimization';\n\ntype Props = ImageProps;\ntype ImageType = {\n  src: string;\n  attributes: AttributesProps;\n};\n\nconst props = Astro.props;\n\nif (props.alt === undefined || props.alt === null) {\n  throw new Error();\n}\n\nif (typeof props.width === 'string') {\n  props.width = parseInt(props.width);\n}\n\nif (typeof props.height === 'string') {\n  props.height = parseInt(props.height);\n}\n\nif (!props.loading) {\n  props.loading = 'lazy';\n}\n\nif (!props.decoding) {\n  props.decoding = 'async';\n}\n\nconst _image = await findImage(props.src);\n\nlet image: ImageType | undefined = undefined;\n\nif (_image !== null && typeof _image === 'object') {\n  image = await getImagesOptimized(_image, props, astroAsseetsOptimizer);\n} else if (typeof _image === 'string' && (_image.startsWith('http://') || _image.startsWith('https://'))) {\n  image = await getImagesOptimized(_image, props, unpicOptimizer);\n} else if (_image) {\n  image = await getImagesOptimized(_image, props);\n}\n---\n\n{!image ? <Fragment /> : <img src={image.src} {...image.attributes} />}\n","export const cache = new WeakMap<Request, Map<string, number>>();\n","---\n// @ts-ignore virtual module\nimport icons, { config } from \"virtual:astro-icon\";\n// @ts-ignore generated by typegen\nimport type { Icon } from \"virtual:astro-icon\";\nimport { getIconData, iconToSVG } from \"@iconify/utils\";\nimport type { HTMLAttributes } from \"astro/types\";\nimport { cache } from \"./cache.js\";\nimport type { IconifyIconBuildResult } from \"@iconify/utils/lib/svg/build.js\";\n\ninterface Props extends HTMLAttributes<\"svg\"> {\n  name: Icon;\n  \"is:inline\"?: boolean;\n  title?: string;\n  desc?: string;\n  size?: number | string;\n  width?: number | string;\n  height?: number | string;\n}\n\nclass AstroIconError extends Error {\n  public hint: string = '';\n\n  constructor(message: string) {\n    super(message);\n  }\n}\n\nconst req = Astro.request;\nconst { name = \"\", title, desc, \"is:inline\": inline = false, ...props } = Astro.props;\nconst map = cache.get(req) ?? new Map();\nconst i = map.get(name) ?? 0;\nmap.set(name, i + 1);\ncache.set(req, map);\n\nconst { include = {} } = config;\nconst sets = Object.keys(include);\n\nconst includeSymbol = !inline && i === 0;\n\nlet [setName, iconName] = (name as string).split(\":\");\n\nif (!setName && iconName) {\n  const err = new AstroIconError(`Invalid \"name\" provided!`);\n  if (import.meta.env.DEV) {\n    err.hint = `The provided value of \"${name}\" is invalid.\\n\\nDid you forget the icon set name? If you were attemping to reference a local icon, use the icon's name directly. (ie. \"${iconName}\")`;\n  }\n  throw err;\n}\n\n// No iconName, assume local icon reference\nif (!iconName) {\n  // Assign the provided setName to the iconName\n  iconName = setName;\n  setName = \"local\";\n\n  // Check if the local icon set exists\n  if (!icons[setName]) {\n    const err = new AstroIconError('Unable to load the \"local\" icon set!');\n    if (import.meta.env.DEV) {\n      err.hint =\n        'It looks like the \"local\" set was not loaded.\\n\\nDid you forget to create the icon directory or to update your config?';\n    }\n    throw err;\n  }\n\n  // Check if the icon is missing from the local collection\n  if (!(iconName in icons[setName].icons)) {\n    const err = new AstroIconError(`Unable to locate \"${name}\" icon!`);\n    if (import.meta.env.DEV) {\n      err.hint = `The icon named \"${iconName}\" was not found in your local icon directory.\\n\\nDid you forget to configure your icon directory or make a typo?`;\n    }\n    throw err;\n  }\n}\n\nconst collection = icons[setName];\n\n// Iconify collection not configured correctly\nif (!collection) {\n  const err = new AstroIconError(`Unable to locate the \"${setName}\" icon set!`);\n  if (import.meta.env.DEV) {\n    if (sets.includes(setName)) {\n      err.hint = `It looks like the \"${setName}\" set was not loaded.\\n\\nDid you install the \"@iconify-json/${setName}\" dependency?`;\n    } else {\n      err.hint = `It looks like the \"${setName}\" set is not included in your configuration.\\n\\nDo you need to add the \"${setName}\" set?`;\n    }\n  }\n  throw err;\n}\n\nconst iconData = getIconData(collection, iconName ?? setName);\n// Missing icon from the icon collection\nif (!iconData) {\n  const err = new AstroIconError(`Unable to locate \"${name}\" icon!`);\n  if (import.meta.env.DEV) {\n    const [maybeStar] = include[setName];\n    if (maybeStar === \"*\" || include[setName].includes(iconName)) {\n      err.hint = `The \"${setName}\" set does not include an icon named \"${iconName}\".\\n\\nIs this a typo?`;\n    } else {\n      err.hint = `The \"${setName}\" set is not configured to include an icon named \"${iconName}\".\\n\\nDo you need to add it to your configuration?`;\n    }\n  }\n  throw err;\n}\n\nconst id = `ai:${collection.prefix}:${iconName ?? setName}`;\n\nif (props.size) {\n  props.width = props.size;\n  props.height = props.size;\n  delete props.size;\n}\nconst renderData = iconToSVG(iconData);\nconst normalizedProps = { ...renderData.attributes as Partial<IconifyIconBuildResult['attributes']>, ...props };\nconst normalizedBody = renderData.body;\n\nconst { viewBox } = normalizedProps;\nif (includeSymbol) {\n  delete normalizedProps.viewBox;\n}\n---\n\n<svg {...normalizedProps} data-icon={name}>\n  {title && <title>{title}</title>}\n  {desc && <desc>{desc}</desc>}\n  {\n    inline ? (\n      <Fragment id={id} set:html={normalizedBody} />\n    ) : (\n      <Fragment>\n        {includeSymbol && <symbol id={id} viewBox={viewBox} set:html={normalizedBody} />}\n        <use href={`#${id}`} />\n      </Fragment>\n    )\n  }\n</svg>\n","---\nimport { Icon } from 'astro-icon/components';\nimport { twMerge } from 'tailwind-merge';\nimport type { CallToAction as Props } from '~/types';\n\nconst {\n  variant = 'secondary',\n  target,\n  text = Astro.slots.render('default'),\n  icon = '',\n  class: className = '',\n  type,\n  ...rest\n} = Astro.props;\n\nconst variants = {\n  primary: 'btn-primary',\n  secondary: 'btn-secondary',\n  tertiary: 'btn btn-tertiary',\n  link: 'cursor-pointer hover:text-primary',\n};\n---\n\n{\n  type === 'button' || type === 'submit' || type === 'reset' ? (\n    <button type={type} class={twMerge(variants[variant] || '', className)} {...rest}>\n      <Fragment set:html={text} />\n      {icon && <Icon name={icon} class=\"w-5 h-5 ml-1 -mr-1.5 rtl:mr-1 rtl:-ml-1.5 inline-block\" />}\n    </button>\n  ) : (\n    <a\n      class={twMerge(variants[variant] || '', className)}\n      {...(target ? { target: target, rel: 'noopener noreferrer' } : {})}\n      {...rest}\n    >\n      <Fragment set:html={text} />\n      {icon && <Icon name={icon} class=\"w-5 h-5 ml-1 -mr-1.5 rtl:mr-1 rtl:-ml-1.5 inline-block\" />}\n    </a>\n  )\n}\n","---\nimport Image from '~/components/common/Image.astro';\n\nconst PereiraTechTalksLogo = '~/assets/images/logos/per-tech-talks.png';\nconst PereiraTechTalksLogoDark = '~/assets/images/logos/per-tech-talks-dark.svg';\n---\n\n<span\n  class=\"self-center ml-2 rtl:ml-0 rtl:mr-2 text-2xl md:text-xl font-bold text-gray-900 whitespace-nowrap dark:text-white\"\n>\n  <Image src={PereiraTechTalksLogo} alt=\"Pereira Tech Talks\" width={150} class=\"mx-auto hidden dark:block\" />\n  <Image src={PereiraTechTalksLogoDark} alt=\"Pereira Tech Talks\" width={150} class=\"mx-auto dark:hidden\" />\n</span>\n","---\nimport { Icon } from 'astro-icon/components';\n\nimport { UI } from 'astrowind:config';\n\nexport interface Props {\n  label?: string;\n  class?: string;\n  iconClass?: string;\n  iconName?: string;\n}\n\nconst {\n  label = 'Toggle between Dark and Light mode',\n  class:\n    className = 'text-muted dark:text-gray-400 hover:bg-gray-100 dark:hover:bg-gray-700 focus:outline-none focus:ring-4 focus:ring-gray-200 dark:focus:ring-gray-700 rounded-lg text-sm p-2.5 inline-flex items-center',\n  iconClass = 'w-6 h-6',\n  iconName = 'tabler:sun',\n} = Astro.props;\n---\n\n{\n  !(UI.theme && UI.theme.endsWith(':only')) && (\n    <button type=\"button\" class={className} aria-label={label} data-aw-toggle-color-scheme>\n      <Icon name={iconName} class={iconClass} />\n    </button>\n  )\n}\n","---\nexport interface Props {\n  label?: string;\n  class?: string;\n}\n\nconst {\n  label = 'Toggle Menu',\n  class: className = 'flex flex-col h-12 w-12 rounded justify-center items-center cursor-pointer group',\n} = Astro.props;\n---\n\n<button class={className} aria-label={label} data-aw-toggle-menu>\n  <span class=\"sr-only\">{label}</span>\n  <slot>\n    <span\n      aria-hidden=\"true\"\n      class=\"h-0.5 w-6 my-1 rounded-full bg-black dark:bg-white transition ease transform duration-200 opacity-80 group-[.expanded]:rotate-45 group-[.expanded]:translate-y-2.5\"\n    ></span>\n    <span\n      aria-hidden=\"true\"\n      class=\"h-0.5 w-6 my-1 rounded-full bg-black dark:bg-white transition ease transform duration-200 opacity-80 group-[.expanded]:opacity-0\"\n    ></span>\n    <span\n      aria-hidden=\"true\"\n      class=\"h-0.5 w-6 my-1 rounded-full bg-black dark:bg-white transition ease transform duration-200 opacity-80 group-[.expanded]:-rotate-45 group-[.expanded]:-translate-y-2.5\"\n    ></span>\n  </slot>\n</button>\n","---\nimport { Icon } from 'astro-icon/components';\nimport Logo from '~/components/Logo.astro';\nimport ToggleTheme from '~/components/common/ToggleTheme.astro';\nimport ToggleMenu from '~/components/common/ToggleMenu.astro';\nimport Button from '~/components/ui/Button.astro';\n\nimport { getHomePermalink } from '~/utils/permalinks';\nimport { trimSlash, getAsset } from '~/utils/permalinks';\nimport type { CallToAction } from '~/types';\n\ninterface Link {\n  text?: string;\n  href?: string;\n  ariaLabel?: string;\n  icon?: string;\n}\n\ninterface ActionLink extends CallToAction {}\n\ninterface MenuLink extends Link {\n  links?: Array<MenuLink>;\n}\n\nexport interface Props {\n  id?: string;\n  links?: Array<MenuLink>;\n  actions?: Array<ActionLink>;\n  isSticky?: boolean;\n  isDark?: boolean;\n  isFullWidth?: boolean;\n  showToggleTheme?: boolean;\n  showRssFeed?: boolean;\n  position?: string;\n}\n\nconst {\n  id = 'header',\n  links = [],\n  actions = [],\n  isSticky = false,\n  isDark = false,\n  isFullWidth = false,\n  showToggleTheme = false,\n  showRssFeed = false,\n  position = 'center',\n} = Astro.props;\n\nconst currentPath = `/${trimSlash(new URL(Astro.url).pathname)}`;\n---\n\n<header\n  class:list={[\n    { sticky: isSticky, relative: !isSticky, dark: isDark },\n    'top-0 z-40 flex-none mx-auto w-full border-b border-gray-50/0 transition-[opacity] ease-in-out',\n  ]}\n  {...isSticky ? { 'data-aw-sticky-header': true } : {}}\n  {...id ? { id } : {}}\n>\n  <div class=\"absolute inset-0\"></div>\n  <div\n    class:list={[\n      'relative text-default 2xl:py-1 py-3 px-3 md:px-6 mx-auto w-full md:flex md:justify-between',\n      {\n        'max-w-7xl': !isFullWidth,\n      },\n    ]}\n  >\n    <div class:list={[{ 'mr-auto rtl:mr-0 rtl:ml-auto': position === 'right' }, 'flex justify-between']}>\n      <a class=\"flex items-center\" href={getHomePermalink()}>\n        <Logo />\n      </a>\n      <div class=\"flex items-center md:hidden\">\n        <ToggleMenu />\n      </div>\n    </div>\n    <nav\n      class=\"items-center w-full md:w-auto hidden md:flex text-default overflow-y-auto overflow-x-hidden md:overflow-y-visible md:overflow-x-auto md:mx-5\"\n      aria-label=\"Main navigation\"\n    >\n      <ul\n        class=\"flex flex-col md:flex-row md:self-center w-full md:w-auto text-xl md:text-[0.9375rem] tracking-[0.01rem] font-medium\"\n      >\n        {\n          links.map(({ text, href, links }) => (\n            <li class={links?.length ? 'dropdown' : ''}>\n              {links?.length ? (\n                <>\n                  <button class=\"hover:text-link dark:hover:text-white px-4 py-3 flex items-center uppercase\">\n                    {text}{' '}\n                    <Icon name=\"tabler:chevron-down\" class=\"w-3.5 h-3.5 ml-0.5 rtl:ml-0 rtl:mr-0.5 hidden md:inline\" />\n                  </button>\n                  <ul class=\"dropdown-menu md:backdrop-blur-md dark:md:bg-dark rounded md:absolute pl-4 md:pl-0 md:hidden font-medium md:bg-white/90 md:min-w-[200px] drop-shadow-xl\">\n                    {links.map(({ text: text2, href: href2 }) => (\n                      <li>\n                        <a\n                          class:list={[\n                            'first:rounded-t last:rounded-b md:hover:bg-gray-100 hover:text-link dark:hover:text-white dark:hover:bg-gray-700 py-2 px-5 block whitespace-no-wrap uppercase',\n                            { 'aw-link-active': href2 === currentPath },\n                          ]}\n                          href={href2}\n                        >\n                          {text2}\n                        </a>\n                      </li>\n                    ))}\n                  </ul>\n                </>\n              ) : (\n                <a\n                  class:list={[\n                    'hover:text-link dark:hover:text-white px-4 py-3 flex items-centers uppercase',\n                    { 'aw-link-active': href === currentPath },\n                  ]}\n                  href={href}\n                >\n                  {text}\n                </a>\n              )}\n            </li>\n          ))\n        }\n      </ul>\n    </nav>\n    <div\n      class:list={[\n        { 'ml-auto rtl:ml-0 rtl:mr-auto': position === 'left' },\n        'hidden md:self-center md:flex items-center md:mb-0 fixed w-full md:w-auto md:static justify-end left-0 rtl:left-auto rtl:right-0 bottom-0 p-3 md:p-0',\n      ]}\n    >\n      <div class=\"items-center flex justify-between w-full md:w-auto\">\n        <div class=\"flex\">\n          {showToggleTheme && <ToggleTheme iconClass=\"w-6 h-6 md:w-5 md:h-5 md:inline-block\" />}\n          {\n            showRssFeed && (\n              <a\n                class=\"text-muted dark:text-gray-400 hover:bg-gray-100 dark:hover:bg-gray-700 focus:outline-none focus:ring-4 focus:ring-gray-200 dark:focus:ring-gray-700 rounded-lg text-sm p-2.5 inline-flex items-center\"\n                aria-label=\"RSS Feed\"\n                href={getAsset('/rss.xml')}\n              >\n                <Icon name=\"tabler:rss\" class=\"w-5 h-5\" />\n              </a>\n            )\n          }\n        </div>\n        {\n          actions?.length ? (\n            <span class=\"ml-4 rtl:ml-0 rtl:mr-4\">\n              {actions.map((btnProps) => (\n                <Button {...btnProps} class=\"ml-2 py-2.5 px-5.5 md:px-6 font-semibold shadow-none text-sm w-auto\" />\n              ))}\n            </span>\n          ) : (\n            ''\n          )\n        }\n      </div>\n    </div>\n  </div>\n</header>\n","---\nimport { Icon } from 'astro-icon/components';\nimport Image from '~/components/common/Image.astro';\nimport { getHomePermalink } from '~/utils/permalinks';\n\nconst PereiraTechTalksLogo = '~/assets/images/logos/per-tech-talks.png';\nconst PereiraTechTalksLogoDark = '~/assets/images/logos/per-tech-talks-dark.svg';\n\ninterface Link {\n  text?: string;\n  href?: string;\n  ariaLabel?: string;\n  icon?: string;\n}\n\ninterface Links {\n  title?: string;\n  links: Array<Link>;\n}\n\nexport interface Props {\n  links: Array<Links>;\n  secondaryLinks: Array<Link>;\n  socialLinks: Array<Link>;\n  footNote?: string;\n  theme?: string;\n}\n\nconst { socialLinks = [], secondaryLinks = [], links = [], footNote = '', theme = 'light' } = Astro.props;\n---\n\n<footer class:list={[{ dark: theme === 'dark' }, 'relative border-t border-gray-200 dark:border-slate-800 not-prose']}>\n  <div class=\"dark:bg-dark absolute inset-0 pointer-events-none\" aria-hidden=\"true\"></div>\n  <div class=\"relative max-w-7xl mx-auto px-4 sm:px-6 dark:text-slate-300\">\n    <div class=\"grid grid-cols-12 gap-4 gap-y-8 sm:gap-8 py-8 md:py-12\">\n      <div class=\"col-span-12 lg:col-span-4\">\n        <div class=\"mb-2\">\n          <a class=\"inline-block font-bold text-xl\" href={getHomePermalink()}>\n            <Image src={PereiraTechTalksLogo} alt=\"Pereira Tech Talks\" width={200} class=\"mx-auto hidden dark:block\" />\n            <Image src={PereiraTechTalksLogoDark} alt=\"Pereira Tech Talks\" width={200} class=\"mx-auto dark:hidden\" />\n          </a>\n        </div>\n        <div class=\"text-sm text-muted flex gap-1\">\n          {\n            secondaryLinks.map(({ text, href }, index) => (\n              <>\n                {index !== 0 ? ' · ' : ''}\n                <a\n                  class=\"text-muted hover:text-gray-700 dark:text-gray-400 hover:underline transition duration-150 ease-in-out\"\n                  href={href}\n                  set:html={text}\n                />\n              </>\n            ))\n          }\n        </div>\n      </div>\n      {\n        links.map(({ title, links }) => (\n          <div class=\"col-span-6 md:col-span-3 lg:col-span-2\">\n            <div class=\"dark:text-gray-300 font-medium mb-2\">{title}</div>\n            {links && Array.isArray(links) && links.length > 0 && (\n              <ul class=\"text-sm\">\n                {links.map(({ text, href, ariaLabel }) => (\n                  <li class=\"mb-2\">\n                    <a\n                      class=\"text-muted hover:text-gray-700 hover:underline dark:text-gray-400 transition duration-150 ease-in-out\"\n                      href={href}\n                      aria-label={ariaLabel}\n                      target=\"_blank\"\n                    >\n                      <Fragment set:html={text} />\n                    </a>\n                  </li>\n                ))}\n              </ul>\n            )}\n          </div>\n        ))\n      }\n    </div>\n    <div class=\"md:flex md:items-center md:justify-between py-6 md:py-8\">\n      {\n        socialLinks?.length ? (\n          <ul class=\"flex mb-4 md:order-1 -ml-2 md:ml-4 md:mb-0 rtl:ml-0 rtl:-mr-2 rtl:md:ml-0 rtl:md:mr-4\">\n            {socialLinks.map(({ ariaLabel, href, text, icon }) => (\n              <li>\n                <a\n                  class=\"text-muted dark:text-gray-400 hover:bg-gray-100 dark:hover:bg-gray-700 focus:outline-none focus:ring-4 focus:ring-gray-200 dark:focus:ring-gray-700 rounded-lg text-sm p-2.5 inline-flex items-center\"\n                  aria-label={ariaLabel}\n                  href={href}\n                >\n                  {icon && <Icon name={icon} class=\"w-5 h-5\" />}\n                  <Fragment set:html={text} />\n                </a>\n              </li>\n            ))}\n          </ul>\n        ) : (\n          ''\n        )\n      }\n\n      <div class=\"text-sm mr-4 dark:text-muted\">\n        <Fragment set:html={footNote} />\n      </div>\n    </div>\n  </div>\n</footer>\n","import { getBlogPermalink, getAsset, getPermalink } from './utils/permalinks';\n\nexport const headerData = {\n  links: [\n    {\n      text: 'Inicio',\n      href: '/',\n    },\n    {\n      text: 'Comunidad',\n      links: [\n        {\n          text: 'Quiénes somos',\n          href: '/about',\n        },\n        {\n          text: 'Contribución',\n          href: '/contributing',\n        },\n      ],\n    },\n    {\n      text: 'Meetups',\n      href: '/meetups',\n    },\n    {\n      text: 'Blog',\n      href: getBlogPermalink(),\n    },\n    {\n      text: 'Contacto',\n      links: [\n        {\n          text: 'WhatsApp',\n          href: 'https://chat.whatsapp.com/EzYAadvUWyVBHt3m1FU77U',\n        },\n        {\n          text: 'Telegram',\n          href: 'https://t.me/PerTechTalks',\n        },\n        {\n          text: 'YouTube',\n          href: 'https://www.youtube.com/@pereiratechtalks',\n          target: '_blank',\n        },\n        {\n          text: 'Instagram',\n          href: 'https://www.instagram.com/pertechtalks/',\n          target: '_blank',\n        },\n        {\n          text: 'X (Twitter)',\n          href: 'https://x.com/PerTechTalks',\n          target: '_blank',\n        },\n      ],\n    },\n  ],\n  actions: [{ text: 'PEREIRA TECH DAY', href: '/pereira-tech-day' }],\n};\n\nexport const eventsHeaderData = {\n  links: [\n    {\n      text: 'Meetups',\n      href: '/meetups',\n    },\n    {\n      text: 'Lightning Talks',\n      href: '/pereira-tech-day/lightning-talks',\n    },\n  ],\n};\n\nexport const footerData = {\n  socialLinks: [\n    {\n      ariaLabel: 'WhatsApp',\n      icon: 'tabler:brand-whatsapp',\n      href: 'https://chat.whatsapp.com/EzYAadvUWyVBHt3m1FU77U',\n      target: '_blank',\n    },\n    { ariaLabel: 'Telegram', icon: 'tabler:brand-telegram', href: 'https://t.me/PerTechTalks', target: '_blank' },\n    { ariaLabel: 'X', icon: 'tabler:brand-x', href: 'https://x.com/PerTechTalks', target: '_blank' },\n    {\n      ariaLabel: 'Instagram',\n      icon: 'tabler:brand-instagram',\n      href: 'https://www.instagram.com/pertechtalks/',\n      target: '_blank',\n    },\n    {\n      ariaLabel: 'Youtube',\n      icon: 'tabler:brand-youtube',\n      href: 'https://www.youtube.com/@pereiratechtalks',\n      target: '_blank',\n    },\n    { ariaLabel: 'RSS', icon: 'tabler:rss', href: getAsset('/rss.xml') },\n    {\n      ariaLabel: 'Github',\n      icon: 'tabler:brand-github',\n      href: 'https://github.com/pereira-tech-talks/',\n      target: '_blank',\n    },\n  ],\n  footNote: `\n    Based on <a href=\"https://github.com/onwidget/astrowind\" target=\"_blank\" rel=\"noopener noreferrer\"><b>AstroWind</b></a> · Powered by <a href=\"https://pages.github.com/\" target=\"_blank\" rel=\"noopener noreferrer\"><b>GitHub</b></a> · Made with ♥️  by <a href=\"https://github.com/orgs/pereira-tech-talks/people\" target=\"_blank\" rel=\"noopener noreferrer\"><b>Pereira Tech Talks</b></a> Team · All rights reserved.\n  `,\n  links: [\n    {\n      title: 'Comunidad',\n      links: [\n        { text: 'JointDev', href: 'https://jointdevweb.firebaseapp.com/' },\n        { text: 'PereiraJS', href: 'https://pereira.js.org/' },\n        { text: 'Python Pereira', href: 'https://pypereira.co' },\n        { text: 'Manizales Tech Talks', href: 'https://www.meetup.com/es/manizalestechtalks/' },\n        { text: 'Quindio Tech', href: 'https://www.meetup.com/es-ES/quindio-tech/' },\n      ],\n    },\n    {\n      title: 'Apoya',\n      links: [\n        { text: 'DailyBot', href: 'https://www.dailybot.com/' },\n        {\n          text: 'ASE UTP',\n          href: 'https://egresados.utp.edu.co/',\n        },\n      ],\n    },\n  ],\n  secondaryLinks: [{ text: 'Código de Conducta', href: getPermalink('/codigo-conducta') }],\n};\n"],"names":["width","$$Astro","$$createAstro","$$createComponent","Astro","$$render","$$renderComponent","$$maybeRenderHead","$$addAttribute","$$spreadAttributes","$$result","$$unescapeHTML","Icon","Image","$$renderSlot","Logo","ToggleMenu","links","ToggleTheme","Button"],"mappings":"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","x_google_ignoreList":[2,3]}